{"ast":null,"code":"var _jsxFileName = \"/Users/zackchand/Documents/Personal Projects/Personal Training Website/zacks_website/src/pages/Contact.js\";\nimport React from \"react\";\n\n// Initialize the emailJS\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst nodemailer = require('nodemailer');\nasync function submitMessage() {\n  // TEST\n  console.log(\"Submit button was pressed\");\n\n  // Getting the email of \n  let email = document.getElementById(\"Email\");\n  let message = document.getElementById(\"Message\");\n  // Extract the email value from the retrived email\n  let email_value = email.value;\n  // Extract the message value\n  let message_value = message.value;\n\n  // TEST params for the email\n  console.log(\"Email: \", email_value);\n  console.log(\"Message: \", message_value);\n  let transporter = nodemailer.createTransport({\n    service: 'gmail',\n    auth: {\n      user: 'zackchand1@gmail.com',\n      pass: 'Zstarchand@11'\n    }\n  });\n  let info = await transporter.sendMail({\n    from: '\"Sender Name\" <your-email@gmail.com>',\n    to: 'recipient@example.com',\n    subject: 'Subject of the email',\n    text: 'Hello, this is a message sent from JavaScript!'\n  });\n  console.log('Email sent:', info.messageId);\n}\nfunction Contact() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"Email\",\n        name: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Message\",\n        id: \"message\",\n        name: \"message\",\n        children: \"Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"Message\",\n        name: \"message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitMessage,\n        children: \" Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_c = Contact;\nexport default Contact;\n// TODO: Stack input boxes instead of horizontal\n// TODO: Add button to jsc elemeent \n///TODO: Add event listeners \nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","nodemailer","require","submitMessage","console","log","email","document","getElementById","message","email_value","value","message_value","transporter","createTransport","service","auth","user","pass","info","sendMail","from","to","subject","text","messageId","Contact","children","class","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","onClick","_c","$RefreshReg$"],"sources":["/Users/zackchand/Documents/Personal Projects/Personal Training Website/zacks_website/src/pages/Contact.js"],"sourcesContent":["import React from \"react\";\n\n// Initialize the emailJS\n\nconst nodemailer = require('nodemailer');\n\n\nasync function submitMessage(){\n    // TEST\n   console.log(\"Submit button was pressed\");\n\n    // Getting the email of \n   let email = document.getElementById(\"Email\");\n   let message = document.getElementById(\"Message\");\n    // Extract the email value from the retrived email\n   let email_value = email.value;\n   // Extract the message value\n   let message_value = message.value;\n\n  // TEST params for the email\n  console.log(\"Email: \" , email_value);\n  console.log(\"Message: \" , message_value)\n\n  let transporter = nodemailer.createTransport({\n    service: 'gmail',\n    auth: {\n        user: 'zackchand1@gmail.com',\n        pass: 'Zstarchand@11'\n    }\n});\n    let info = await transporter.sendMail({\n        from: '\"Sender Name\" <your-email@gmail.com>',\n        to: 'recipient@example.com',\n        subject: 'Subject of the email',\n        text: 'Hello, this is a message sent from JavaScript!',\n    });\n\nconsole.log('Email sent:', info.messageId);\n  \n}\nfunction Contact() {\n    return (\n        <>\n        <div class=\"input-container\">\n            <label htmlFor=\"Email\">Email:</label>\n            <input type=\"text\" id=\"Email\" name=\"Email\" />\n            <label htmlFor=\"Message\" id=\"message\" name=\"message\">Message</label>\n            <input type=\"text\" id=\"Message\" name=\"message\"/>\n            <button onClick={submitMessage}> Submit</button>\n        </div>\n        </>\n    );\n}\n\nexport default Contact;\n// TODO: Stack input boxes instead of horizontal\n// TODO: Add button to jsc elemeent \n///TODO: Add event listeners \n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,UAAU,GAAGC,OAAO,CAAC,YAAY,CAAC;AAGxC,eAAeC,aAAaA,CAAA,EAAE;EAC1B;EACDC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;;EAEvC;EACD,IAAIC,KAAK,GAAGC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC;EAC5C,IAAIC,OAAO,GAAGF,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC;EAC/C;EACD,IAAIE,WAAW,GAAGJ,KAAK,CAACK,KAAK;EAC7B;EACA,IAAIC,aAAa,GAAGH,OAAO,CAACE,KAAK;;EAElC;EACAP,OAAO,CAACC,GAAG,CAAC,SAAS,EAAGK,WAAW,CAAC;EACpCN,OAAO,CAACC,GAAG,CAAC,WAAW,EAAGO,aAAa,CAAC;EAExC,IAAIC,WAAW,GAAGZ,UAAU,CAACa,eAAe,CAAC;IAC3CC,OAAO,EAAE,OAAO;IAChBC,IAAI,EAAE;MACFC,IAAI,EAAE,sBAAsB;MAC5BC,IAAI,EAAE;IACV;EACJ,CAAC,CAAC;EACE,IAAIC,IAAI,GAAG,MAAMN,WAAW,CAACO,QAAQ,CAAC;IAClCC,IAAI,EAAE,sCAAsC;IAC5CC,EAAE,EAAE,uBAAuB;IAC3BC,OAAO,EAAE,sBAAsB;IAC/BC,IAAI,EAAE;EACV,CAAC,CAAC;EAENpB,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEc,IAAI,CAACM,SAAS,CAAC;AAE1C;AACA,SAASC,OAAOA,CAAA,EAAG;EACf,oBACI5B,OAAA,CAAAE,SAAA;IAAA2B,QAAA,eACA7B,OAAA;MAAK8B,KAAK,EAAC,iBAAiB;MAAAD,QAAA,gBACxB7B,OAAA;QAAO+B,OAAO,EAAC,OAAO;QAAAF,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrCnC,OAAA;QAAOoC,IAAI,EAAC,MAAM;QAACC,EAAE,EAAC,OAAO;QAACC,IAAI,EAAC;MAAO;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7CnC,OAAA;QAAO+B,OAAO,EAAC,SAAS;QAACM,EAAE,EAAC,SAAS;QAACC,IAAI,EAAC,SAAS;QAAAT,QAAA,EAAC;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpEnC,OAAA;QAAOoC,IAAI,EAAC,MAAM;QAACC,EAAE,EAAC,SAAS;QAACC,IAAI,EAAC;MAAS;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAChDnC,OAAA;QAAQuC,OAAO,EAAElC,aAAc;QAAAwB,QAAA,EAAC;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C;EAAC,gBACJ,CAAC;AAEX;AAACK,EAAA,GAZQZ,OAAO;AAchB,eAAeA,OAAO;AACtB;AACA;AACA;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}