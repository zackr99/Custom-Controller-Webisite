{"ast":null,"code":"var _jsxFileName = \"/Users/zackchand/Documents/Personal Projects/Personal Training Website/zacks_website/src/pages/Contact.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport emailjs from '@emailjs/browser';\n\n// This function sends the message to the the server\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Contact() {\n  _s();\n  // use form reference\n  const form = useRef();\n  const submitMessage = e => {\n    e.preventDefault();\n    emailjs.sendForm('YOUR_SERVICE_ID', 'YOUR_TEMPLATE_ID', form.current, {\n      publicKey: 'YOUR_PUBLIC_KEY'\n    }).then(() => {\n      console.log('SUCCESS!');\n    }, error => {\n      console.log('FAILED...', error.text);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"Email\",\n        name: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Message\",\n        id: \"message\",\n        name: \"message\",\n        children: \"Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"Message\",\n        name: \"message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitMessage,\n        children: \" Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Contact, \"dQhLC9DEDZP9Q6oVJIWRdCVKDdw=\");\n_c = Contact;\nexport default Contact;\n// TODO: Stack input boxes instead of horizontal\n// TODO: Add button to jsc elemeent \n///TODO: Add event listeners \nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","emailjs","jsxDEV","_jsxDEV","Fragment","_Fragment","Contact","_s","form","useRef","submitMessage","e","preventDefault","sendForm","current","publicKey","then","console","log","error","text","children","class","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","onClick","_c","$RefreshReg$"],"sources":["/Users/zackchand/Documents/Personal Projects/Personal Training Website/zacks_website/src/pages/Contact.js"],"sourcesContent":["import React from \"react\";\nimport emailjs from '@emailjs/browser';\n\n\n\n// This function sends the message to the the server\n\nfunction Contact() {\n    // use form reference\n    const form = useRef()\n\n    const submitMessage = (e) =>{\n        e.preventDefault();\n    \n        emailjs\n          .sendForm('YOUR_SERVICE_ID', 'YOUR_TEMPLATE_ID', form.current, {\n            publicKey: 'YOUR_PUBLIC_KEY',\n          })\n          .then(\n            () => {\n              console.log('SUCCESS!');\n            },\n            (error) => {\n              console.log('FAILED...', error.text);\n            },\n        );\n    \n    }\n    return (\n        <>\n        <div class=\"input-container\">\n            <label htmlFor=\"Email\">Email:</label>\n            <input type=\"text\" id=\"Email\" name=\"Email\" />\n            <label htmlFor=\"Message\" id=\"message\" name=\"message\">Message</label>\n            <input type=\"text\" id=\"Message\" name=\"message\"/>\n            <button onClick={submitMessage}> Submit</button>\n        </div>\n        </>\n    );\n}\n\nexport default Contact;\n// TODO: Stack input boxes instead of horizontal\n// TODO: Add button to jsc elemeent \n///TODO: Add event listeners \n\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,kBAAkB;;AAItC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEA,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf;EACA,MAAMC,IAAI,GAAGC,MAAM,CAAC,CAAC;EAErB,MAAMC,aAAa,GAAIC,CAAC,IAAI;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElBX,OAAO,CACJY,QAAQ,CAAC,iBAAiB,EAAE,kBAAkB,EAAEL,IAAI,CAACM,OAAO,EAAE;MAC7DC,SAAS,EAAE;IACb,CAAC,CAAC,CACDC,IAAI,CACH,MAAM;MACJC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IACzB,CAAC,EACAC,KAAK,IAAK;MACTF,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEC,KAAK,CAACC,IAAI,CAAC;IACtC,CACJ,CAAC;EAEL,CAAC;EACD,oBACIjB,OAAA,CAAAE,SAAA;IAAAgB,QAAA,eACAlB,OAAA;MAAKmB,KAAK,EAAC,iBAAiB;MAAAD,QAAA,gBACxBlB,OAAA;QAAOoB,OAAO,EAAC,OAAO;QAAAF,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrCxB,OAAA;QAAOyB,IAAI,EAAC,MAAM;QAACC,EAAE,EAAC,OAAO;QAACC,IAAI,EAAC;MAAO;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7CxB,OAAA;QAAOoB,OAAO,EAAC,SAAS;QAACM,EAAE,EAAC,SAAS;QAACC,IAAI,EAAC,SAAS;QAAAT,QAAA,EAAC;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpExB,OAAA;QAAOyB,IAAI,EAAC,MAAM;QAACC,EAAE,EAAC,SAAS;QAACC,IAAI,EAAC;MAAS;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAChDxB,OAAA;QAAQ4B,OAAO,EAAErB,aAAc;QAAAW,QAAA,EAAC;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C;EAAC,gBACJ,CAAC;AAEX;AAACpB,EAAA,CAhCQD,OAAO;AAAA0B,EAAA,GAAP1B,OAAO;AAkChB,eAAeA,OAAO;AACtB;AACA;AACA;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}